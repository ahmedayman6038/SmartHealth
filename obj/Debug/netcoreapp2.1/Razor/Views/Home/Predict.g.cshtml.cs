#pragma checksum "E:\DotNetProjects\SmartHealth\SmartHealth\Views\Home\Predict.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6e2924554e043f8de551980048921c5f298e703f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Predict), @"mvc.1.0.view", @"/Views/Home/Predict.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Predict.cshtml", typeof(AspNetCore.Views_Home_Predict))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\_ViewImports.cshtml"
using SmartHealth;

#line default
#line hidden
#line 2 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\_ViewImports.cshtml"
using SmartHealth.Models;

#line default
#line hidden
#line 3 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\_ViewImports.cshtml"
using SmartHealth.ViewModels;

#line default
#line hidden
#line 4 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\_ViewImports.cshtml"
using System.Security.Claims;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6e2924554e043f8de551980048921c5f298e703f", @"/Views/Home/Predict.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c9543f9600ab52d0545610097c373e8191ebae5b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Predict : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\Home\Predict.cshtml"
  
    ViewData["Title"] = "Predict";

#line default
#line hidden
            BeginContext(45, 355, true);
            WriteLiteral(@"
<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"">
    <!-- Content Header (Page header) -->
    <section class=""content-header"">
        <h1>
            Prediction
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> Home</a></li>
            <li class=""active"">");
            EndContext();
            BeginContext(401, 17, false);
#line 15 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\Home\Predict.cshtml"
                          Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(418, 3375, true);
            WriteLiteral(@"</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class=""content container-fluid"">

        <div class=""row"">
            <!-- left column -->
            <div class=""col-md-12"">
                <!-- general form elements -->
                <div class=""box box-primary"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title"">Predict Disease</h3>
                    </div>
                    <!-- /.box-header -->
                    <div id=""prediction"">
                        <div class=""box-body"">
                            <label for=""Name"">Enter symptom that's troubling you the most.</label>
                            <div class=""input-group input-group-sm"">

                                <input type=""text"" name=""Name"" id=""Name"" list=""results"" class=""form-control"">
                                <span class=""input-group-btn"">
                                    <button id=""InitializePrediction"" class=""btn");
            WriteLiteral(@" btn-info btn-flat"">Go!</button>
                                </span>
                            </div>
                            <datalist id=""results""></datalist>
                            <p id=""error"" class=""text-danger""></p>
                        </div>
                    <!-- /.box-body -->
                    </div>
                </div>
                <!-- /.box -->

            </div>
            <!--/.col (left) -->

        </div>
        <!-- /.row-->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<div class=""modal modal-success fade"" id=""modal-success"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
                <h4 class=""modal-title"">Success</h4>
            </div>
            <div class=""m");
            WriteLiteral(@"odal-body"">
                <p>Data saved successfully, Do you want add new item?</p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-outline pull-left"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-outline"" id=""addNew"">Add New</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div class=""modal modal-danger fade"" id=""modal-danger"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
                <h4 class=""modal-title"">Error</h4>
            </div>
            <div class=""modal-body"">
                <p>This name already exist, Please add another one and try aga");
            WriteLiteral(@"in!</p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-outline "" data-dismiss=""modal"">Ok</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3811, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 104 "E:\DotNetProjects\SmartHealth\SmartHealth\Views\Home\Predict.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial"); 

#line default
#line hidden
                BeginContext(3882, 1408, true);
                WriteLiteral(@"    <script>
        $(function () {
            $('#Name').keyup(delay(function (e) {
                $(""#results"").empty();
                var name = $('#Name').val();
                searchSymptom(name);
            }, 500));
            $(document).on(""click"", '#InitializePrediction', function () {
                var name = $('#Name').val();
                if (name) {
                    InitializePrediction(name);
                } else {
                    $(""#error"").empty();
                    $(""#error"").append(""Please enter a symptom"");
                }
            });
            $(document).on(""click"", '#StartPrediction', function () {
                var symptomId = $(""input[name='SymptomId']:checked"").val();
                if (symptomId) {
                    StartPrediction(symptomId);
                } else {
                    $(""#error"").empty();
                    $(""#error"").append(""Please select a symptom"");
                }
            });
            $");
                WriteLiteral(@"(document).on(""click"", '#NotFounded', function () {
                var symptomId = $('#NotFounded').data(""symptom"");
                if (symptomId) {
                    StartPrediction(symptomId);
                } else {
                    $(""#error"").empty();
                    $(""#error"").append(""error"");
                }
            });
        })
    </script>
");
                EndContext();
            }
            );
            BeginContext(5293, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
